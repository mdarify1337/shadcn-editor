{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "component-picker-menu-plugin-demo",
  "type": "registry:example",
  "author": "shadcn (https://ui.shadcn.com)",
  "registryDependencies": [
    "https://shadcn-editor.vercel.app/r/component-picker-menu-plugin.json"
  ],
  "files": [
    {
      "path": "examples/component-picker-menu-plugin-demo.tsx",
      "content": "'use client'\r\n\r\nimport { useState } from \"react\"\r\nimport { QuoteNode } from \"@lexical/rich-text\"\r\n\r\nimport { InitialConfigType, LexicalComposer } from \"@lexical/react/LexicalComposer\"\r\nimport { LexicalErrorBoundary } from \"@lexical/react/LexicalErrorBoundary\"\r\nimport { RichTextPlugin } from \"@lexical/react/LexicalRichTextPlugin\"\r\n\r\nimport { TooltipProvider } from \"@/registry/default/ui/tooltip\"\r\n\r\nimport { editorTheme } from \"@/registry/default/editor/themes/editor-theme\"\r\nimport { ContentEditable } from \"@/registry/default/editor/editor-ui/content-editable\"\r\nimport { ComponentPickerMenuPlugin } from \"@/registry/default/editor/plugins/component-picker-menu-plugin\"\r\n\r\nimport { AlignmentPickerPlugin } from '@/registry/default/editor/plugins/picker/alignment-picker-plugin'\r\nimport { ParagraphPickerPlugin } from '@/registry/default/editor/plugins/picker/paragraph-picker-plugin'\r\nimport { HeadingPickerPlugin } from '@/registry/default/editor/plugins/picker/heading-picker-plugin'\r\nimport { QuotePickerPlugin } from '@/registry/default/editor/plugins/picker/quote-picker-plugin'\r\n\r\nconst editorConfig: InitialConfigType = {\r\n  namespace: 'Editor',\r\n  theme: editorTheme,\r\n  nodes: [\r\n    QuoteNode\r\n  ],\r\n  onError: (error: Error) => {\r\n    console.error(error)\r\n  },\r\n}\r\n\r\nexport default function RichTextEditorDemo() {\r\n  return (\r\n    <div className=\"w-full overflow-hidden rounded-lg border bg-background shadow\">\r\n      <LexicalComposer\r\n        initialConfig={{\r\n          ...editorConfig,\r\n        }}\r\n      >\r\n        <TooltipProvider>\r\n          <Plugins />\r\n        </TooltipProvider>\r\n      </LexicalComposer>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst placeholder = 'Start typing...'\r\n\r\nexport function Plugins() {\r\n  const [floatingAnchorElem, setFloatingAnchorElem] =\r\n    useState<HTMLDivElement | null>(null)\r\n\r\n  const onRef = (_floatingAnchorElem: HTMLDivElement) => {\r\n    if (_floatingAnchorElem !== null) {\r\n      setFloatingAnchorElem(_floatingAnchorElem)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      {/* toolbar plugins */}\r\n\r\n      <div className=\"relative\">\r\n        <RichTextPlugin\r\n          contentEditable={\r\n            <div className=\"\">\r\n              <div className=\"\" ref={onRef}>\r\n                <ContentEditable placeholder={placeholder} className=\"ContentEditable__root relative block min-h-72 overflow-auto min-h-full px-8 py-4 focus:outline-none h-72\" />\r\n              </div>\r\n            </div>\r\n          }\r\n          ErrorBoundary={LexicalErrorBoundary}\r\n        />\r\n        <ComponentPickerMenuPlugin \r\n          baseOptions={[\r\n            ParagraphPickerPlugin(),\r\n            HeadingPickerPlugin({ n: 1 }),\r\n            HeadingPickerPlugin({ n: 2 }),\r\n            HeadingPickerPlugin({ n: 3 }),\r\n            QuotePickerPlugin(),\r\n            AlignmentPickerPlugin({ alignment: \"left\" }),\r\n            AlignmentPickerPlugin({ alignment: \"right\" }),\r\n            AlignmentPickerPlugin({ alignment: \"center\" }),\r\n            AlignmentPickerPlugin({ alignment: \"justify\" }),\r\n          ]}\r\n        />\r\n        {/* rest of the plugins */}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n",
      "type": "registry:example",
      "target": ""
    }
  ]
}